This week I worked on the following:
Implemented helpful functions for Network::copy():
- implemented [] operator for Network class
- added "utils.cpp" file where I implemented find_index template function to get index of element in given vector
- implemented get_index for Layer class to get index of Layer in given Network 
- implemented get_index for Neuron class to get index of Neuron in parent network
- implemented get_full_index for Neuron to get 2d index of Neuron in given Network
- implemented copy_edge() function (help function to use for Network::copy()
Finally implemented Network::copy() that creates a copy of the Network to be used in reproduction. 
This creates a new Network object (and new Neuron, Layer and Edges objects) and only copies values
and connections. 
- tested network::copy()


Next week I plan to work on the following:
- fix possible errors in saving and reconstructing of networks (implemented by Anja M. and Natali G.)
- test if neural network evolution works as intended by implementing a simple reward function and using 
  reproduction function (from Matei A. and Tudor C.) to run several generations of neural networks and 
  weeding out the worst performing models to hopefully create a model that maximizes the simple reward function